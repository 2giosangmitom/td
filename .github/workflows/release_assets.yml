name: Release Assets

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        if: matrix.os != 'windows-latest'
        uses: DeterminateSystems/nix-installer-action@main

      - name: Config Nix cache
        if: matrix.os != 'windows-latest'
        uses: DeterminateSystems/flakehub-cache-action@main

      - name: Build the project
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then \
            mkdir build; \
            vcpkg install fmt cxxopts; \
            clang++ -Wall -Wextra -O2 -lfmt -std=c++17 src\main.cc -o build\todocxx.exe; \
          else \
            nix develop --command make; \
          fi

      - name: Create release asset
        run: |
          cd build
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then \
            OS_NAME="linux"; \
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then \
            OS_NAME="macos"; \
          else \
            OS_NAME="windows"; \
          fi
          tar -czf todocxx-${OS_NAME}.tar.gz todocxx

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./build/todocxx-*.tar.gz
